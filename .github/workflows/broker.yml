---
name: Broker â€“ Lint, Test and Publish

on:
  push:
    branches:
      - client/v6
      - client/v6-miner-stable
  workflow_dispatch:

concurrency:
  group: broker-build-${{ github.head_ref }}
  cancel-in-progress: true
defaults:
  run:
    working-directory: packages/broker

jobs:
  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.2
      - uses: actions/setup-node@v3.6.0
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version-file: '.nvmrc'

      - name: bootstrap-pkg
        working-directory: './'
        run: |
          npm install -g npm@8 --prefer-offline --no-audit
          npm run bootstrap-pkg streamr-broker
      - run: npm run eslint
      - run: npm run test-unit

  docker-push:
    name: Build + Push Docker images
    needs: [test-unit]
    runs-on: self-hosted
    # only push for nightly runs and manual triggers
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}

    steps:
      - uses: actions/checkout@v3.5.2
      - name: Cache Docker layers
        uses: actions/cache@v3.3.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-v1-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-v1-
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
        with:
          driver-opts: |
            network=host
      - uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta_failure
        uses: docker/metadata-action@v4.4.0
        # if test steps failed, push sha anyway
        if: ${{ always() && (needs.test-unit.result == 'failure' || needs.test-integration.result == 'failure' || needs.test-docker.result == 'failure') }}
        with:
          images: streamr/broker-node
          tags: |
            type=sha
            type=ref,event=branch
            type=raw,value=debug
